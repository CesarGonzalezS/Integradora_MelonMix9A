name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: sonarcloud
    strategy:
      matrix:
        function:
          - name: create_favorite
            path: lambdas/favorites_managment/create_favorite
            requirements: lambdas/favorites_managment/create_favorite/requirements.txt
            function_name: YOUR_CREATE_FAVORITE_LAMBDA_FUNCTION_NAME
          - name: delete_favorite
            path: lambdas/favorites_managment/delete_favorite
            requirements: lambdas/favorites_managment/delete_favorite/requirements.txt
            function_name: YOUR_DELETE_FAVORITE_LAMBDA_FUNCTION_NAME
          - name: read_favorite
            path: lambdas/favorites_managment/read_favorite
            requirements: lambdas/favorites_managment/read_favorite/requirements.txt
            function_name: YOUR_READ_FAVORITE_LAMBDA_FUNCTION_NAME
          - name: update_favorite
            path: lambdas/favorites_managment/update_favorite
            requirements: lambdas/favorites_managment/update_favorite/requirements.txt
            function_name: YOUR_UPDATE_FAVORITE_LAMBDA_FUNCTION_NAME
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # Optional

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Specify your Python version

      - name: Install dependencies
        run: |
          cd ${{ matrix.function.path }}
          python -m pip install --upgrade pip
          if [ -f ${{ matrix.function.requirements }} ]; then pip install -r ${{ matrix.function.requirements }}; fi

      - name: Build SAM application
        run: sam build
      - name: Deploy SAM application
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name utez --capabilities CAPABILITY_IAM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1