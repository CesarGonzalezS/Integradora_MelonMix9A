AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Integradora9A

  Sample SAM Template for Integradora9A

Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: RDSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:Connect
                Resource: "*"

  CreateUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: user_management/create_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        RegisterUser:
          Type: Api
          Properties:
            Path: /create_user
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"



  ReadUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: user_management/read_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /read_user/{user_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: user_management/update_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /update_user/{user_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"


  DeleteUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: user_management/delete_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteUser:
          Type: Api
          Properties:
            Path: /delete_user/{user_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

Outputs:
  RegisterUserApi:
    Description: "API Gateway endpoint URL for Prod stage for Register User function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_user/"
  GetUserApi:
    Description: "API Gateway endpoint URL for Prod stage for Get User function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_user/{user_id}"
  UpdateUserApi:
    Description: "API Gateway endpoint URL for Prod stage for Update User function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_user/{user_id}"
  DeleteUserApi:
    Description: "API Gateway endpoint URL for Prod stage for Delete User function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_user/{user_id}"
