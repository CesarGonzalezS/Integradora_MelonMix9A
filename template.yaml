AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Integradora9A

  Sample SAM Template for Integradora9A

Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: RDSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:Connect
                Resource: "*"

  CreateUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/user_management/create_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        RegisterUser:
          Type: Api
          Properties:
            Path: /create_user
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  ReadUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/user_management/read_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetUser:
          Type: Api
          Properties:
            Path: /read_user/{user_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/user_management/update_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /update_user/{user_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  DeleteUserFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/user_management/delete_user/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteUser:
          Type: Api
          Properties:
            Path: /delete_user/{user_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  CreateFavoriteFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/favorites_managment/create_favorite/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        RegisterFavorite:
          Type: Api
          Properties:
            Path: /create_favorite
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  ReadFavoriteFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/favorites_managment/read_favorite/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetFavorite:
          Type: Api
          Properties:
            Path: /read_favorite/{favorite_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateFavoriteFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/favorites_managment/update_favorite/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateFavorite:
          Type: Api
          Properties:
            Path: /update_favorite/{favorite_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  DeleteFavoriteFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/favorites_managment/delete_favorite/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteFavorite:
          Type: Api
          Properties:
            Path: /delete_favorite/{favorite_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"
  

  CreateArtistFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/artist_management/create_artist/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateArtist:
          Type: Api
          Properties:
            Path: /create_artist
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  ReadArtistFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/artist_management/read_artist/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        ReadArtist:
          Type: Api
          Properties:
            Path: /read_artist/{artist_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateArtistFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/artist_management/update_artist/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateArtist:
          Type: Api
          Properties:
            Path: /update_artist/{artist_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  DeleteArtistFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/artist_management/delete_artist/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteArtist:
          Type: Api
          Properties:
            Path: /delete_artist/{artist_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  CreateAlbumsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/albums_management/create_albums/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateAlbums:
          Type: Api
          Properties:
            Path: /create_albums
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  ReadAlbumsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/albums_management/read_albums/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        ReadAlbums:
          Type: Api
          Properties:
            Path: /read_albums/{album_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateAlbumsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/albums_management/update_albums/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateAlbums:
          Type: Api
          Properties:
            Path: /update_albums/{album_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  DeleteAlbumsFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/albums_management/delete_albums/
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteAlbums:
          Type: Api
          Properties:
            Path: /delete_albums/{album_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"
  CreateSongFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/song_management/create_song/  # Se ha actualizado la ruta de CodeUri
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateSong:
          Type: Api
          Properties:
            Path: /create_song
            Method: post
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  ReadSongFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/song_management/read_song/  # Se ha actualizado la ruta de CodeUri
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetSong:
          Type: Api
          Properties:
            Path: /read_song/{song_id}
            Method: get
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  UpdateSongFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/song_management/update_song/  # Se ha actualizado la ruta de CodeUri
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateSong:
          Type: Api
          Properties:
            Path: /update_song/{song_id}
            Method: put
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"

  DeleteSongFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambdas/song_management/delete_song/  # Se ha actualizado la ruta de CodeUri
      Handler: app.lambda_handler
      Runtime: python3.11
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteSong:
          Type: Api
          Properties:
            Path: /delete_song/{song_id}
            Method: delete
      Environment:
        Variables:
          RDS_HOST: "integradoramelomix.c92quiiw2jmr.us-east-2.rds.amazonaws.com"
          RDS_USER: "admin"
          RDS_PASSWORD: "admin123"
          RDS_DB: "melonmix"


Outputs:
  CreateUserApi:
    Description: "API Gateway endpoint URL for Create User Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_user/"
  ReadUserApi:
    Description: "API Gateway endpoint URL for Read User Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_user/"
  UpdateUserApi:
    Description: "API Gateway endpoint URL for Update User Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_user/"
  DeleteUserApi:
    Description: "API Gateway endpoint URL for Delete User Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_user/"
  CreateFavoriteApi:
    Description: "API Gateway endpoint URL for Create Favorite Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_favorite/"
  ReadFavoriteApi:
    Description: "API Gateway endpoint URL for Read Favorite Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_favorite/"
  UpdateFavoriteApi:
    Description: "API Gateway endpoint URL for Update Favorite Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_favorite/"
  DeleteFavoriteApi:
    Description: "API Gateway endpoint URL for Delete Favorite Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_favorite/"
  CreateArtistApi:
    Description: "API Gateway endpoint URL for Create Artist Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_artist/"
  ReadArtistApi:
    Description: "API Gateway endpoint URL for Read Artist Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_artist/"
  UpdateArtistApi:
    Description: "API Gateway endpoint URL for Update Artist Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_artist/"
  DeleteArtistApi:
    Description: "API Gateway endpoint URL for Delete Artist Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_artist/"
  CreateAlbumsApi:
    Description: "API Gateway endpoint URL for Create Albums Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_albums/"
  ReadAlbumsApi:
    Description: "API Gateway endpoint URL for Read Albums Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_albums/"
  UpdateAlbumsApi:
    Description: "API Gateway endpoint URL for Update Albums Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_albums/"
  DeleteAlbumsApi:
    Description: "API Gateway endpoint URL for Delete Albums Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_albums/"
  CreateSongApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Song function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/create_song/"
  GetSongApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Song function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/read_song/{song_id}"
  UpdateSongApi:
    Description: "API Gateway endpoint URL for Prod stage for Update Song function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_song/{song_id}"
  DeleteSongApi:
    Description: "API Gateway endpoint URL for Prod stage for Delete Song function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_song/{song_id}"